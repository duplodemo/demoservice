name: Build and Deploy
on:
  # Triggers the workflow on push to matching branches
  push:
    branches:
      - develop
      - staging
env:
  duplo_host: https://mysystem.duplocloud.net  # CHANGE ME!
  duplo_token: "${{ secrets.DUPLO_TOKEN }}"
  ECR_REPO_NAME: demoservice                      # CHANGE ME!
  TENANT_NAME: mytenant                        # CHANGE ME!

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prereq:
    runs-on: ubuntu-latest
    steps:
      - name: Github configuration environment selector
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "::set-output name=env_name::production"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "::set-output name=env_name::dev"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "::set-output name=env_name::stage"
          else
             echo "::set-output name=env_name::Features"
          fi         
          
      - name: Print environment
        run: echo "I'm using environment ${{ steps.branch_check.outputs.env_name }}"
        
            
    # This part is important - it will be used by the build and deploy job
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
  build:
    runs-on: ubuntu-latest
    needs:
      - prereq
    environment: ${{ needs.prereq.outputs.env_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Set up for docker build
      - name: Get AWS credentials
        uses: duplocloud/ghactions-aws-jit@master
        with:
          tenant: "${{ vars.TENANT_NAME }}"
          duplo_token: "${{ secrets.DUPLO_TOKEN }}"
          duplo_host: "${{ var.DUPLO_HOST }}"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push the docker image
      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}
            
    # This part is important - it will be used by the deploy job
    outputs:
      image: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}"